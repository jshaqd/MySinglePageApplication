@using MvcApplication.Models
@{
    ViewBag.Title = "Friends";
    Layout = "~/Views/Shared/_master.cshtml";
}

<div class="container-fluid">

    <h3 align="center">张家港网友大聚会</h3>
    <h4 align="center">如果你出生于江苏张家港市或现生活在张家港市，请
        <span>
            <a id="new-friend" class="btn btn-success"
               data-toggle="modal" href="#friend-modal">登记</a>
        </span>
    </h4>

    <div class="btn-toolbar"
        data-bind="visible: viewModel.friendSelected() > 0">
        <div class="btn-group">
            <span class="btn btn-primary">Actions</span>
            <a class="btn btn-primary dropdown-toggle"
                data-toggle="dropdown" href="">
                <span class="caret"></span>
            </a>
            <ul class="dropdown-menu">
                <li><a id="new-friend" data-toggle="modal" href="#friend-delete">Delete</a></li>
            </ul>
        </div>
    </div>

    <table id="friends" class="table table-striped table-hover table-condensed">
        <thead>
            <tr>
                <th></th>
                <th>姓名</th>
                <th>籍贯</th>
                <th>工作单位</th>
                <th>中学</th>
                <th>大学</th>
                <th>电话</th>
                <th>主页</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: viewModel.friends">
            <tr>
                <td><input type="checkbox" data-bind="checked: selected" /></td>
                <td><a href="#friend-modal" rel="tooltip" data-placement="top" title="点击修改" data-toggle="modal" data-bind="text: name, click: function(form) { edit('Friend') }"></a></td>
                <td><a href="#friend-modal" rel="tooltip" data-placement="top" title="点击修改" data-toggle="modal" data-bind="text: state, click: function(form) { edit('Friend') }"></a></td>
                <td><a href="#friend-modal" rel="tooltip" data-placement="top" title="点击修改" data-toggle="modal" data-bind="text: employer, click: function(form) { edit('Friend') }"></a></td>
                <td><a href="#friend-modal" rel="tooltip" data-placement="top" title="点击修改" data-toggle="modal" data-bind="text: highschool, click: function(form) { edit('Friend') }"></a></td>
                <td><a href="#friend-modal" rel="tooltip" data-placement="top" title="点击修改" data-toggle="modal" data-bind="text: college, click: function(form) { edit('Friend') }"></a></td>
                <td><a href="#friend-modal" rel="tooltip" data-placement="top" title="点击修改" data-toggle="modal" data-bind="text: phonenumber, click: function(form) { edit('Friend') }"></a></td>
                <td><a href="#friend-modal" rel="tooltip" data-placement="top" title="点击修改" data-toggle="modal" data-bind="text: url, click: function(form) { edit('Friend') }"></a></td>
            </tr>
        </tbody>
    </table>
    <div class="pull-right">
        <a id="new-friend" class="btn btn-success"
            data-toggle="modal" href="#friend-modal">登记</a>
    </div>

    <div class="modal hide fade" id="friend-modal">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">x</button>
            <h3>登记</h3>
        </div>
        <form id="Friend"
            data-bind="submit:
            function(form) {postFriend(form, 'friend-modal')}">
            <div class="modal-body">
                @{ Html.RenderPartial("_Friend", new Friend());}
            </div>
            <div class="modal-footer">
                <a href="#" class="btn" data-dismiss="modal">取消</a>
                <input type="submit" class="btn btn-primary" value="保存" />
            </div>
        </form>
    </div>

    <div class="modal hide fade" id="friend-delete">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">x</button>
            <h3>删除?</h3>
        </div>
        <div class="modal-body">
            <p>确定删除?</p>
        </div>
        <div class="modal-footer">
            <a href="#" class="btn" data-dismiss="modal">取消</a>
            <input type="submit" class="btn btn-danger" value="删除"
                data-bind="click: function() { deleteFriends('friend-delete') }" />
        </div>

    </div>
</div>

<script type="text/javascript">
    function friend(friend) {
        this.id = ko.observable(friend.id);
        this.name = ko.observable(friend.name);
        this.state = ko.observable(friend.state);
        this.employer = ko.observable(friend.employer);
        this.highschool = ko.observable(friend.highschool);
        this.college = ko.observable(friend.college);
        this.phonenumber = ko.observable(friend.phonenumber);
        this.url = ko.observable(friend.url);
        this.selected = ko.observable(false);
        this.edit = function (formId) {
            var form = $('#' + formId);
            form.data('friend', this);
        };
        this.update = function (friend) {
            this.id(friend.id);
            this.name(friend.name);
            this.state(friend.state);
            this.employer(friend.employer);
            this.highschool(friend.highschool);
            this.college(friend.college);
            this.phonenumber(friend.phonenumber);
            this.url(friend.url);
        };

        $('#friend-modal').on('hide', function () {
            var form = $('#Friend');
            form.validate().resetForm();
            form.get(0).reset();
            form.removeData('friend');
            form.find("input[type='hidden'][id='id']").remove();
        });
        $('#friend-modal').on('show', function () {
            var form = $('#Friend');
            var friend = form.data('friend');
            if (!friend)
                return;

            $('<input>').attr('type', 'hidden')
                        .attr('id', 'id')
                        .attr('name', 'id')
                        .val(friend.id()).prependTo(form);
            form.find('#Name').val(friend.name());
            form.find('#State').val(friend.state());
            form.find('#Employer').val(friend.employer());
            form.find('#HighSchool').val(friend.highschool());
            form.find('#College').val(friend.college());
            form.find('#PhoneNumber').val(friend.phonenumber());
            form.find('#URL').val(friend.url());
        });
    }

    $(function () {
        ko.applyBindings(viewModel);
        viewModel.loadFriends();
    });

    var viewModel = {
        friends: ko.observableArray([]),
        loadFriends: function () {
            var self = this;
            $.getJSON(
                '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "Friends" })',
                function (friends) {
                    self.friends.removeAll();
                    $.each(friends, function (index, item) {
                        self.friends.push(new friend(item));
                    });
                }
            );
            },
        postFriend: function (form, modalId) {
            form = $(form);
            if (!form.valid())
                return;
            var json = JSON.stringify(this._getFriendFromForm(form));

            var update = form.find("input[type='hidden'][id='id']").val();
            var httpVerb = !update ? "POST" : "PUT";

            var self = this;
            $.ajax({
                url: '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "friends" })',
                type: httpVerb,
                data: json,
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (jsonObject) {
                    if (update) {
                        var match = ko.utils.arrayFirst(self.friends(), function (item) {
                            return jsonObject.id === item.id();
                        });
                        match.update(jsonObject);
                    }
                    else {
                        self.friends.push(new friend(jsonObject));
                    }
                    $('#' + modalId).modal('hide');
                }
                
            });
        },
        resetForm: function (formId) {
            var form = $('#' + formId);
            form.validate().resetForm();
            form.get(0).reset();
        },
        _getFriendFromForm: function (form) {
            form = $(form);
            var friend = {};
            form.find('input[type!=submit],select').each(function () {
                friend[this.name] = $(this).val();
            });
            return friend;
        },
        deleteFriends: function (modalId) {
            var ids = new Array();
            $.each(this.friends(), function (index, friend) {
                if (friend.selected())
                    ids.push(friend.id);
            });
            var self = this;
            $.ajax({
                url: '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "friends" })',
                type: 'DELETE',
                data: ko.toJSON(ids),
                contentType: 'application/json; charset=utf-8',
                success: function () {
                    $.each(ids, function (index, id) {
                        var match = ko.utils.arrayFirst(self.friends(), function (item) {
                            return id === item.id();
                        });
                        self.friends.remove(match);
                    });
                    $('#' + modalId).modal('hide');
                }
            });
            this.loadFriends();
        }
    }

    viewModel.friendSelected = ko.computed(function () {
        var selected = 0;
        $.each(this.friends(), function (index, friend) {
            if (friend.selected())
                selected++;
        });
        return selected;
    }, viewModel);

</script>

