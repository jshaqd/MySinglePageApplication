@using MvcApplication.Models
@{
    ViewBag.Title = "ContactUs";
    Layout = "~/Views/Shared/_master.cshtml";
}

<div class="container-fluid">
    <h3>联系方式</h3>

    <span class="span1">公司名称：</span><span class="span10">鑫缘蚕丝绸集团股份有限公司</span><br />
    <span class="span1">地址：</span><span class="span10">江苏海安县城曙光西路20号</span><br />
    <span class="span1">邮编：</span><span class="span10">226600</span><br />
    <span class="span1">法人代表：</span><span class="span10">储呈平</span><br />
    <span class="span1">开户银行：</span><span class="span10">中国银行江海分理处</span><br />
    <span class="span1">帐  号：</span><span class="span10">84021 6938 7080 91001</span><br />
    <span class="span12">
        <hr />
    </span>
    <span class="span1">联系人：</span><span class="span10">钱颖华</span><br />
    <span class="span1">电  话：</span><span class="span10">0513-88813706</span><br />
    <span class="span1">手  机：</span><span class="span10">(0)13962786610</span><br />
    <span class="span1">传  真：</span><span class="span10">0513-88814216</span><br />
    <span class="span1">E－mail：</span><span class="span10">jsfcd@qq.com</span><br />

    <div class="pull-right">
        <a id="new-comment" class="btn btn-success"
            data-toggle="modal" href="#comment-modal">我要留言</a>
    </div>

    <div class="modal hide fade" id="comment-modal">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">x</button>
            <h4>留言</h4>
        </div>
        <div class="alert">请在表格中输入您的留言，姓名与留言两项是必须的。</div>
        <form id="Comment"
            data-bind="submit:
            function(form) {postComment(form, 'comment-modal')}">
            <div class="modal-body">
                @{ Html.RenderPartial("_CommentEntry", new Comment());}
            </div>
            <div class="modal-footer">
                <a href="#" class="btn" data-dismiss="modal">取消</a>
                <input type="submit" class="btn btn-primary" value="保存" />
            </div>
        </form>
    </div>
</div>


<script type="text/javascript">
    function comment(comment) {
        this.id = ko.observable(comment.id);
        this.name = ko.observable(comment.name);
        this.address = ko.observable(comment.address);
        this.emailaddress = ko.observable(comment.emailaddress);
        this.url = ko.observable(comment.url);
        this.content = ko.observable(comment.content);
        this.created = ko.observable(comment.created);

        $('#comment-modal').on('hide', function () {
            var form = $('#Comment');
            form.validate().resetForm();
            form.get(0).reset();
            form.removeData('comment');
            form.find("input[type='hidden'][id='id']").remove();
        });
        $('#comment-modal').on('show', function () {
            var form = $('#Comment');
            var comment = form.data('comment');
            if (!comment)
                return;

            $('<input>').attr('type', 'hidden')
                .attr('id', 'id')
                .attr('name', 'id')
                .val(comment.id()).prependTo(form);
            form.find('#Name').val(comment.name());
            form.find('#Address').val(comment.address());
            form.find('#EmailAddress').val(comment.emailaddress());
            form.find('#URL').val(comment.url());
            form.find('#Content').val(comment.content());
            form.find('#Created').val(comment.created());
        });
    }

    $(function () {
        ko.applyBindings(viewModel);
        viewModel.loadComments();
    });

    var viewModel = {
        comments: ko.observableArray([]),
        loadComments: function () {
            var self = this;
            $.getJSON(
                '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "Comment" })',
                    function (comments) {
                        self.comments.removeAll();
                        $.each(comments, function (index, item) {
                            self.comments.push(new comment(item));
                        });
                    });
        },

        postComment: function (form, modalId) {
            form = $(form);
            if (!form.valid())
                return;
            var json = JSON.stringify(this._getCommentFromForm(form));

            var self = this;
            $.ajax({
                url: '@Url.RouteUrl("DefaultApi", new { httproute = "", controller = "Comment" })',
                    type: "POST",
                    data: json,
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    success: function (jsonObject) {
                        self.comments.push(new comment(jsonObject));
                        $('#' + modalId).modal('hide');
                    }
                });
            },
        resetForm: function (formId) {
            var form = $('#' + formId);
            form.validate().resetForm();
            form.get(0).reset();
        },
        _getCommentFromForm: function (form) {
            form = $(form);
            var comment = {};
            form.find('input[type!=submit],select').each(function () {
                comment[this.name] = $(this).val();
            });
            return comment;
        }
    };
</script>

